---
version: '1.0'
description: A basic workflow that replaces a dead cassandra node with a spare.
input:
  - dead_node
  - replacement_node
  - healthy_node
output:
  - just_output_the_whole_worfklow_context: <% $ %>
tasks:
  is_seed_node:
    action: cassandra.is_seed_node
    input:
      hosts: <% ctx().healthy_node %>
      node_id: <% ctx().dead_node %>
    next:
      - when: <% succeeded() %>
        publish:
          - seed_node: <% ctx().is_seed_node.get(ctx().healthy_node).stdout %>
      - when: <% succeeded() and (ctx().seed_node = 'True') %>
        do:
          - abort_replace
      - when: <% succeeded() and (ctx().seed_node = 'False') %>
        do:
          - create_vm
      - when: <% succeeded() and (not ctx().seed_node in list(False, True)) %>
        do:
          - error_seed_node_determination
      - when: <% failed() %>
        do:
          - error_seed_node_determination
  abort_replace:
    action: slack.post_message
    input:
      channel: '#dsedemo'
      message: '```[CASS-REPLACE-HOST] [<% ctx().dead_node %>] STATUS: FAILED REASON: SEED NODE DEAD. NOT HANDLED. ABORTED.```'
    next:
      - do:
          - fail
  error_seed_node_determination:
    action: slack.post_message
    input:
      channel: '#dsedemo'
      message: '```[CASS-REPLACE-HOST] [<% ctx().dead_node %>] STATUS: FAILED READON: SEED NODE DETERMINATION FAILED.```'
    next:
      - do:
          - fail
  create_vm:
    action: core.local
    input:
      cmd: echo Replacing <% ctx().dead_node%> with <% ctx().replacement_node %>
    next:
      - when: <% succeeded() %>
        do:
          - stop_cassandra_service
      - when: <% failed() %>
        do:
          - notify_create_vm_failed
  notify_create_vm_failed:
    action: slack.post_message
    input:
      channel: '#dsedemo'
      message: '```[CASS-REPLACE-HOST] STATUS: FAILED REASON: create_vm_with_role failed.```'
    next:
      - do:
          - fail
  stop_cassandra_service:
    action: cassandra.stop_dse
    input:
      hosts: <% ctx().replacement_node %>
    next:
      - when: <% succeeded() %>
        do:
          - remove_cass_data
  remove_cass_data:
    action: cassandra.clear_cass_data
    input:
      data_dir: /var/lib/cassandra
      hosts: <% ctx().replacement_node %>
    next:
      - when: <% succeeded() %>
        do:
          - remove_replace_address_jvm_opt_if_exists
  remove_replace_address_jvm_opt_if_exists:
    action: cassandra.remove_replace_address_env_file
    input:
      hosts: <% ctx().replacement_node %>
    next:
      - when: <% succeeded() %>
        do:
          - set_jvm_opts_with_replace_address
  set_jvm_opts_with_replace_address:
    action: cassandra.append_replace_address_env_file
    input:
      dead_node: <% ctx().dead_node %>
      hosts: <% ctx().replacement_node %>
    next:
      - when: <% succeeded() %>
        do:
          - start_cassandra_service
  start_cassandra_service:
    action: cassandra.start_dse
    input:
      hosts: <% ctx().replacement_node %>
    next:
      - when: <% succeeded() %>
        do:
          - notify_replace_host_started
  notify_replace_host_started:
    action: slack.post_message
    input:
      channel: '#dsedemo'
      message: '```[CASS-REPLACE-HOST] [<% ctx().dead_node %>] STATUS: STARTED```'
    next:
      - when: <% succeeded() %>
        do:
          - wait_for_read_ports_to_open
      - when: <% failed() %>
        do:
          - wait_for_read_ports_to_open
  wait_for_read_ports_to_open:
    action: cassandra.wait_for_port_open
    input:
      check_port: 9042
      server: <% ctx().replacement_node %>
      hosts: <% ctx().replacement_node %>
      timeout: 1800
    next:
      - when: <% succeeded() %>
        do:
          - remove_replace_address_env_file
      - when: <% failed() %>
        do:
          - notify_replace_host_failed
  remove_replace_address_env_file:
    action: cassandra.remove_replace_address_env_file
    input:
      hosts: <% ctx().replacement_node %>
    next:
      - when: <% succeeded() %>
        do:
          - notify_replace_host_success
  notify_replace_host_success:
    action: slack.post_message
    input:
      channel: '#dsedemo'
      message: '```[CASS-REPLACE-HOST] [<% ctx().dead_node %>] STATUS: SUCCEEDED```'
  notify_replace_host_failed:
    action: slack.post_message
    input:
      channel: '#dsedemo'
      message: '```[CASS-REPLACE-HOST] [<% ctx().dead_node %>] STATUS: FAILED```. REASON: BOOTSTRAP TIMED OUT.'
